{
  "comments": [
    {
      "key": {
        "uuid": "22d5d6a8_b2148d07",
        "filename": "src/data_query.hpp",
        "patchSetId": 45
      },
      "lineNbr": 35,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-01-21T14:14:16Z",
      "side": 1,
      "message": "nit: perhaps a using-declaration within this file for this method would not hurt? That way, you could avoid typing this nice type from the implementing method.",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 50
      },
      "revId": "372b5d0e9185ac2edc02a9e3743156dbdc1fa756",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c659ab0d_39661da7",
        "filename": "tests/data_query.cpp",
        "patchSetId": 45
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-01-21T14:14:16Z",
      "side": 1,
      "message": "can you please add a test where these lists are nested? I think that it would be interested to see results with datastore content such as:\n\n /example:org[department\u003d\u0027accounting\u0027]/people[name\u003d\u0027Alice\u0027]\n /example:org[department\u003d\u0027accounting\u0027]/people[name\u003d\u0027Bob\u0027]\n /example:org[department\u003d\u0027sales\u0027]/people[name\u003d\u0027Alice\u0027]\n /example:org[department\u003d\u0027sales\u0027]/people[name\u003d\u0027Cyril\u0027]\n /example:org[department\u003d\u0027programmers\u0027]/people /* empty list */",
      "revId": "372b5d0e9185ac2edc02a9e3743156dbdc1fa756",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea3dea94_3b48db8b",
        "filename": "tests/data_query.cpp",
        "patchSetId": 45
      },
      "lineNbr": 31,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-01-21T14:14:16Z",
      "side": 1,
      "message": "ðŸ‘Š",
      "range": {
        "startLine": 31,
        "startChar": 48,
        "endLine": 31,
        "endChar": 69
      },
      "revId": "372b5d0e9185ac2edc02a9e3743156dbdc1fa756",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    }
  ]
}