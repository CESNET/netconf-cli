{
  "comments": [
    {
      "key": {
        "uuid": "1cf0fc08_6a08a920",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-19T17:17:23Z",
      "side": 1,
      "message": "please explain why it was necessary to use the C API instead of C++ (here in the commit message)",
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b1b055a_db19ecf4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 0,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-22T13:30:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1cf0fc08_6a08a920",
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a3f5598_46f55579",
        "filename": "tests/datastore_access.cpp",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-19T17:17:23Z",
      "side": 1,
      "message": "This reflects current behavior, but I don\u0027t think these are good values. I *think* that the correct behavior is DatastoreException, but I haven\u0027t given that much thought -- so please take a look at it.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 29,
        "endChar": 27
      },
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3405bcee_04339cbf",
        "filename": "tests/datastore_access.cpp",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-22T13:30:43Z",
      "side": 1,
      "message": "CHanged",
      "parentUuid": "6a3f5598_46f55579",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 29,
        "endChar": 27
      },
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d67fdb5_39aa794e",
        "filename": "tests/datastore_access.cpp",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-22T14:06:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3405bcee_04339cbf",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 29,
        "endChar": 27
      },
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78336b86_da7b8034",
        "filename": "tests/datastore_access.cpp",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-22T14:29:53Z",
      "side": 1,
      "message": "I changed a little bit more.",
      "parentUuid": "0d67fdb5_39aa794e",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 29,
        "endChar": 27
      },
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4998041b_b6409825",
        "filename": "tests/datastore_access.cpp",
        "patchSetId": 26
      },
      "lineNbr": 29,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-23T14:55:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78336b86_da7b8034",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 29,
        "endChar": 27
      },
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03b5f12c_6e7e6a54",
        "filename": "tests/datastore_access.cpp",
        "patchSetId": 26
      },
      "lineNbr": 805,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-06-19T17:17:23Z",
      "side": 1,
      "message": "It would be nice to change this behavior a bit. Ideally, the in-memory YANG backend should (IMHO) check validity of the input parameters. If they are not valid, it should, IMHO, throw with an exception saying \"invalid input data\" (and preferably also with detailed error messages with XPath). If they are valid, it should throw a different exception \"not implemented in this backend\" because it cannot return reasonable data.",
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3b501f7_bd18b77f",
        "filename": "tests/datastore_access.cpp",
        "patchSetId": 26
      },
      "lineNbr": 805,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-06-22T13:30:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03b5f12c_6e7e6a54",
      "revId": "c2e6772fedc033dbe8bee14885d52ee366413820",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    }
  ]
}