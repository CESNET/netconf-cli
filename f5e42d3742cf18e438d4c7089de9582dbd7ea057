{
  "comments": [
    {
      "key": {
        "uuid": "90df7845_ec69f0d7",
        "filename": "src/sysrepo_access.cpp",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-01-08T17:25:44Z",
      "side": 1,
      "message": "Do you expect a need to distinguish between various types of these special nodes programmatically? I think that it makes sense to, e.g., hide containers all the time (that\u0027s what the YANG RFC more or less says, it doesn\u0027t matter whether that node is present or not), but show presence containers if they are present (because that carries a meaning).\n\nIf that\u0027s indeed the case, then it would be better to have several extra structs so that the code can react appropriately.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 46,
        "endChar": 34
      },
      "revId": "f5e42d3742cf18e438d4c7089de9582dbd7ea057",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "400bf910_921445b4",
        "filename": "src/sysrepo_access.cpp",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-01-08T18:12:13Z",
      "side": 1,
      "message": "I can already distinguish these types by the strings. I don\u0027t think making extra structs is meaningful, although changing the string to an enum might make sense (so I dont\u0027 have to compare strings to find the type).",
      "parentUuid": "90df7845_ec69f0d7",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 46,
        "endChar": 34
      },
      "revId": "f5e42d3742cf18e438d4c7089de9582dbd7ea057",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "507b4cbb_2f710a8e",
        "filename": "src/sysrepo_access.cpp",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-01-08T21:21:32Z",
      "side": 1,
      "message": "Well, when I wrote \"programmatically\", I meant that as a hint that string comparison doesn\u0027t count :).\n\nInteresting, my personal preference would be to go with types, not enums, because the code already has to handle stuff explicitly. But on a second thought, I see that the other visitor just relies on the generic `auto` overload, so perhaps it\u0027s better to stick an extra enum inside as you suggested. We\u0027ll see how it works once this gets used.",
      "parentUuid": "400bf910_921445b4",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 46,
        "endChar": 34
      },
      "revId": "f5e42d3742cf18e438d4c7089de9582dbd7ea057",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e91b4f33_183a21af",
        "filename": "src/sysrepo_access.cpp",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-01-08T17:25:44Z",
      "side": 1,
      "message": "it\u0027s being used for other purposes, not just a list",
      "range": {
        "startLine": 71,
        "startChar": 66,
        "endLine": 71,
        "endChar": 70
      },
      "revId": "f5e42d3742cf18e438d4c7089de9582dbd7ea057",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    }
  ]
}