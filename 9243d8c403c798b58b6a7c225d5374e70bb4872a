{
  "comments": [
    {
      "key": {
        "uuid": "4091b1ef_448c1bca",
        "filename": "src/datastore_access.cpp",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-09T11:15:57Z",
      "side": 1,
      "message": "Five ctors are declared, only one is defined.",
      "revId": "9243d8c403c798b58b6a7c225d5374e70bb4872a",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdd6f832_eb12dea7",
        "filename": "src/datastore_access.cpp",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-09T12:18:50Z",
      "side": 1,
      "message": "I deleted the other ones",
      "parentUuid": "4091b1ef_448c1bca",
      "revId": "9243d8c403c798b58b6a7c225d5374e70bb4872a",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "721d4c7c_43cfdec4",
        "filename": "src/datastore_access.hpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-09T11:15:57Z",
      "side": 1,
      "message": "I think I understand the rules at least a little bit, but I cannot imagine a situation where using a DatastoreAccess in any other way than just constructing a derived class and never ever moving/direct-assigning/copy-constructing makes sense.",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 63
      },
      "revId": "9243d8c403c798b58b6a7c225d5374e70bb4872a",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea79d1a8_40d885fd",
        "filename": "src/datastore_access.hpp",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-09T12:18:50Z",
      "side": 1,
      "message": "Deleted",
      "parentUuid": "721d4c7c_43cfdec4",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 49,
        "endChar": 63
      },
      "revId": "9243d8c403c798b58b6a7c225d5374e70bb4872a",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58c78870_0db98fb3",
        "filename": "src/leaf_data_type.hpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-09T11:15:57Z",
      "side": 1,
      "message": "Do we need move semantics here? Are they worth the noise?",
      "revId": "9243d8c403c798b58b6a7c225d5374e70bb4872a",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2167c042_53ca083f",
        "filename": "src/leaf_data_type.hpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-09T12:18:50Z",
      "side": 1,
      "message": "Tbh I don\u0027t care about (this type of) noise. I think we don\u0027t need move semantics anywhere in this project. I\u0027m implementing all of this to follow the rule of five/zero. If it\u0027s a good idea or not, I\u0027m not so sure (I can always just disable this check).",
      "parentUuid": "58c78870_0db98fb3",
      "revId": "9243d8c403c798b58b6a7c225d5374e70bb4872a",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b127276_d0b071cd",
        "filename": "src/leaf_data_type.hpp",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-09T11:15:57Z",
      "side": 1,
      "message": "These are apparently not used (they are declared, but not defined, and therefore if they were invoked, linker would have told you). What about \u003ddelete?",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 95,
        "endChar": 47
      },
      "revId": "9243d8c403c798b58b6a7c225d5374e70bb4872a",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcc10e17_a7961107",
        "filename": "src/leaf_data_type.hpp",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-09T12:18:50Z",
      "side": 1,
      "message": "My view on this is that if some code tries to use move semantics, it will warn that these are not defined, instead of just saying copy ctor",
      "parentUuid": "6b127276_d0b071cd",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 95,
        "endChar": 47
      },
      "revId": "9243d8c403c798b58b6a7c225d5374e70bb4872a",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    }
  ]
}