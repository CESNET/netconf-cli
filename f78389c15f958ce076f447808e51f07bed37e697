{
  "comments": [
    {
      "key": {
        "uuid": "b8b71f18_b9a33a48",
        "filename": "src/ast_commands.hpp",
        "patchSetId": 5
      },
      "lineNbr": 239,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "random bikeshedding of the day: all other commands use complete words, and since we have that tab completion, should we call this \"execute\"?\n\n(I\u0027m interested in opinions. Naming is the hardest problem in SW engineering.)",
      "range": {
        "startLine": 239,
        "startChar": 34,
        "endLine": 239,
        "endChar": 38
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69ddefbf_a2405729",
        "filename": "src/ast_commands.hpp",
        "patchSetId": 5
      },
      "lineNbr": 239,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "I don\u0027t really mind calling it \"execute\", but I think \"exec\" is used almost everywhere in IT, I think everyone is used to \"exec\" almost being like an actual word (and it means execute)",
      "parentUuid": "b8b71f18_b9a33a48",
      "range": {
        "startLine": 239,
        "startChar": 34,
        "endLine": 239,
        "endChar": 38
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f4aa704_6867f0e0",
        "filename": "src/ast_commands.hpp",
        "patchSetId": 5
      },
      "lineNbr": 239,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T13:00:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "69ddefbf_a2405729",
      "range": {
        "startLine": 239,
        "startChar": 34,
        "endLine": 239,
        "endChar": 38
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a9baab6_e3c11cd1",
        "filename": "src/cli.cpp",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "\"lol\" and \"rofl\" are much less descriptive than \"foo\" and \"bar\"",
      "range": {
        "startLine": 129,
        "startChar": 9,
        "endLine": 129,
        "endChar": 12
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a2369e5_af490c39",
        "filename": "src/cli.cpp",
        "patchSetId": 5
      },
      "lineNbr": 129,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a9baab6_e3c11cd1",
      "range": {
        "startLine": 129,
        "startChar": 9,
        "endLine": 129,
        "endChar": 12
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d687fc82_1363bfa0",
        "filename": "src/interpreter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 213,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "a leftover comment?",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88b17458_11fd3317",
        "filename": "src/interpreter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 213,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d687fc82_1363bfa0",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2eec783c_8c94db25",
        "filename": "src/interpreter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "Is this needed? src/cli.cpp already has a try/catch block.",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca36f73c_d64e1537",
        "filename": "src/interpreter.cpp",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "I needed the call to changeNode always run. I reordered the commands.",
      "parentUuid": "2eec783c_8c94db25",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "02e00e5d_475cc8c1",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "That trailing slash looks fishy. There are no tests, so that I don\u0027t know how it\u0027s expected to work (is there a use case for showing nodes that are inputs of the RPC? outputs? Who filters out stuff that is current-command dependent? etc)",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96a75c7c_fdd1f778",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "Well... rpc works kind of like a container, so a slash should be fine. I haven\u0027t really thought about it. I guess if command is \"rpc\" then a space should be added, otherwise (ls, describe) a slash should be added? I don\u0027t have a mechanism for this kind of functionality (yet), so I right now, I have to decide which one.",
      "parentUuid": "02e00e5d_475cc8c1",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f503c5a_483e9f61",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-17T09:23:49Z",
      "side": 1,
      "message": "So I\u0027m going to get a tab completion like this, right?\n\n  sysrepo-cli\u003e rpc /foo:shoot/\n\nIs that perhaps worth adding a test? Not just for this, but also for an RPC with input params which should *not* tab-complete these inputs, i.e., not like this:\n\n sysrepo-cli\u003e rpc /foo:/shoot/whom",
      "parentUuid": "96a75c7c_fdd1f778",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba9c6568_f4afbe44",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-17T09:30:04Z",
      "side": 1,
      "message": "Yes, you\u0027re going to get tab completion like that.\n\nFor the rpc command, only rpc nodes are considered.",
      "parentUuid": "2f503c5a_483e9f61",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6446cd56_0de6e555",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-17T10:19:37Z",
      "side": 1,
      "message": "I added the test, but for some reason, set only works with input stuff, if the current context is rpc... which is good I guess, but also it\u0027s kind of weird? Idk",
      "parentUuid": "ba9c6568_f4afbe44",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0f8abf5_ccced2b4",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-17T10:24:33Z",
      "side": 1,
      "message": "- Can you do a `cd /my:rpc`? This should not be possible (let\u0027s test that).\n- If that\u0027s not possible, it means that I can only be \"in\" an RPC when that RPC has been \"opened\". (What happens when I cancel an RPC? What is my CWD? Test that, please.)\n- If all of the above works well, then tab completion should only offer me nodes within the RPC, *plus* the \"../\", and after the \"../\", that should get me to the full tree. Also, tab completion for paths starting with \"/\" should work even when I\u0027m in the RPC context.",
      "parentUuid": "6446cd56_0de6e555",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5176946c_b40b21f1",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-17T10:25:55Z",
      "side": 1,
      "message": "\u003e but for some reason, set only works with input stuff, if the current context is rpc\n\nit\u0027s because RPCs are not considered config nodes, and set filters those out",
      "parentUuid": "a0f8abf5_ccced2b4",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2b3b6d0_d65bbf48",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-17T12:18:18Z",
      "side": 1,
      "message": "The user can\u0027t cd into rpc anymore. Test added\n\nI realized I don\u0027t have a \"cancel\" command. Should I create a new command called \"cancel\"?",
      "parentUuid": "5176946c_b40b21f1",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0082ca8e_11b97d80",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-17T12:26:01Z",
      "side": 1,
      "message": "- yes, please add the \"cancel\" command (with tests)\n\nCan you confirm that \"crossing the RPC boundary\" works well? In particular, I\u0027m interested in tests for tab completion that goes:\n\n- \"from RPC up\"\n- \"from root down to within an RPC when that RPC has been opened before, but not yet executed\"\n\nAnd finally, what happens with current context when an RPC concludes:\n\n- the context should make sense (must be outside of the RPC, OK to be just \"/\"\n- it must not be possible to tab-complete `set` for RPC input anymore\n- it must not be possible to call `set` for RPC input anymore, either\n\nAs far as I can tell none of this is covered now, right?",
      "parentUuid": "b2b3b6d0_d65bbf48",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b55d95eb_824f6542",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-17T14:52:55Z",
      "side": 1,
      "message": "\u003ethe context should make sense (must be outside of the RPC, OK to be just \"/\"\nadded test for that\n\n\u003eit must not be possible to tab-complete `set` for RPC input anymore\n\u003eit must not be possible to call `set` for RPC input anymore, either\n\nthese are covered by the fact, that you can\u0027t enter a rpc node, and set doesn\u0027t work with input nodes if you aren\u0027t inside the rpc\n\n\u003e\"from RPC up\"\n\u003e\"from root down to within an RPC when that RPC has been opened before, but not yet executed\"\n\nadded a test for that too",
      "parentUuid": "0082ca8e_11b97d80",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ed9ca1d_7ba928e8",
        "filename": "src/path_parser.hpp",
        "patchSetId": 5
      },
      "lineNbr": 143,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-23T13:28:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b55d95eb_824f6542",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "347a33f9_04d36413",
        "filename": "src/proxy_datastore.cpp",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "This should error out if an RPC has been already initiated. I.e., allow just one \"pending\" RPC at a time, and don\u0027t discrad stuff silently if the user tries to open another one.",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51a99b11_31394883",
        "filename": "src/proxy_datastore.cpp",
        "patchSetId": 5
      },
      "lineNbr": 65,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "347a33f9_04d36413",
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66647fc8_ce9105a7",
        "filename": "src/proxy_datastore.cpp",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "nit: \"RPC\", not \"rpc\" please (and kill the question mark as well)",
      "range": {
        "startLine": 75,
        "startChar": 37,
        "endLine": 75,
        "endChar": 40
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "033e0dab_1b17dff3",
        "filename": "src/proxy_datastore.cpp",
        "patchSetId": 5
      },
      "lineNbr": 75,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66647fc8_ce9105a7",
      "range": {
        "startLine": 75,
        "startChar": 37,
        "endLine": 75,
        "endChar": 40
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b47e295_12311685",
        "filename": "src/proxy_datastore.hpp",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "why is it no touchy touchy and not yes touchy touchy? :)",
      "range": {
        "startLine": 35,
        "startChar": 37,
        "endLine": 35,
        "endChar": 62
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea10a6d9_e854b7c3",
        "filename": "src/proxy_datastore.hpp",
        "patchSetId": 5
      },
      "lineNbr": 35,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b47e295_12311685",
      "range": {
        "startLine": 35,
        "startChar": 37,
        "endLine": 35,
        "endChar": 62
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f2ebc33_43f44a47",
        "filename": "src/proxy_datastore.hpp",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-07-16T08:05:03Z",
      "side": 1,
      "message": "nit: \"create\", not \"get\", because the code assumes that it\u0027s always a fresh one. Or at least I assume that\u0027s what the code assumes :), so feel free to say nope.",
      "range": {
        "startLine": 36,
        "startChar": 95,
        "endLine": 36,
        "endChar": 98
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bc2d24a_bf51d9ca",
        "filename": "src/proxy_datastore.hpp",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-07-16T09:31:57Z",
      "side": 1,
      "message": "Yeah, that\u0027s a better name, changed",
      "parentUuid": "0f2ebc33_43f44a47",
      "range": {
        "startLine": 36,
        "startChar": 95,
        "endLine": 36,
        "endChar": 98
      },
      "revId": "f78389c15f958ce076f447808e51f07bed37e697",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    }
  ]
}