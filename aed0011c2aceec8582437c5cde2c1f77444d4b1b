{
  "comments": [
    {
      "key": {
        "uuid": "087579a4_0aee19e0",
        "filename": "tests/python_netconfaccess.py",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-01-21T13:26:10Z",
      "side": 1,
      "message": "Is this intentionally a string? If so, is it intentionally in single quotes to make it different from the other strings?",
      "range": {
        "startLine": 13,
        "startChar": 26,
        "endLine": 13,
        "endChar": 30
      },
      "revId": "aed0011c2aceec8582437c5cde2c1f77444d4b1b",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e31c060_6af05b90",
        "filename": "tests/python_netconfaccess.py",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-01-21T13:32:44Z",
      "side": 1,
      "message": "Yes. As the commit message says, there\u0027s an impedance mismatch between our C++ variant and the python world. pybind11\u0027s output therefore reports the type signature of, say, setLeaf as:\n\n setLeaf(self: netconf_cli_py.NetconfAccess,\n  xpath: str,\n  value: Union[netconf_cli_py.YangEnum, netconf_cli_py.YangBinary, netconf_cli_py.YangIdentityRef,\n               netconf_cli_py.YangSpecial, float, bool, int, int, int, int, int, int, int, int, str]\n ) -\u003e None\n\nI wanted to check if this is going to be a problem (I remember that \"something\" in the CLI, perhaps not the NetconfAccess class itself, though, enforces an int8 parameter to be actually an int8, not e.g. uint32_t{10}). This test demonstrates that it is not a problem, and it is even not a problem when passed as a string (which came as a surprise to me).\n\nThe \" vs \u0027 was just an omission, though -- fixed now.",
      "parentUuid": "087579a4_0aee19e0",
      "range": {
        "startLine": 13,
        "startChar": 26,
        "endLine": 13,
        "endChar": 30
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "aed0011c2aceec8582437c5cde2c1f77444d4b1b",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f812444_eda7f679",
        "filename": "tests/python_netconfaccess.py",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-01-21T13:42:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3e31c060_6af05b90",
      "range": {
        "startLine": 13,
        "startChar": 26,
        "endLine": 13,
        "endChar": 30
      },
      "revId": "aed0011c2aceec8582437c5cde2c1f77444d4b1b",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    }
  ]
}