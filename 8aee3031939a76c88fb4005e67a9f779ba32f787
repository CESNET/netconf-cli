{
  "comments": [
    {
      "key": {
        "uuid": "c80a75c0_e826cdb1",
        "filename": "src/static_schema.cpp",
        "patchSetId": 7
      },
      "lineNbr": 141,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-04-30T14:35:51Z",
      "side": 1,
      "message": "Hmmm. This is a good change of course, but given the context in which I saw it (https://gerrit.cesnet.cz/c/CzechLight/netconf-cli/+/2488/6..7/src/static_schema.cpp where it got changed from \u003d\u003d to !\u003d), I went to investigate test coverage:\n\n- splitModuleNode is now never called without a \u0027:\u0027,\n- availableNodes() never hits line 159.\n\nThis looks fishy -- can you take a look, please?",
      "revId": "8aee3031939a76c88fb4005e67a9f779ba32f787",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b3165e7_dd0cb535",
        "filename": "src/static_schema.cpp",
        "patchSetId": 7
      },
      "lineNbr": 141,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-04-30T15:29:02Z",
      "side": 1,
      "message": "1) it is never called without a colon, because all paths in StaticSchema are stored with the prefix. I\u0027ll change the return statement to a throw statement.\n2) it never hits that line, because availableNodes with a module argument is only used for the output of the ls command and I don\u0027t test that. So maybe I should just throw there?",
      "parentUuid": "c80a75c0_e826cdb1",
      "revId": "8aee3031939a76c88fb4005e67a9f779ba32f787",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "973045ca_25c04d0d",
        "filename": "src/static_schema.cpp",
        "patchSetId": 7
      },
      "lineNbr": 141,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-04-30T17:22:50Z",
      "side": 1,
      "message": "I thought it\u0027s tested by this one in tests/ls.cpp:\n\n            SECTION(\"ls example:*\")\n            {\n                input \u003d \"ls example:*\";\n                expected.m_path \u003d module_{\"example\"};\n            }\n\n...but when you said it\u0027s only triggered by actual *invocation* of ls, right, that makes sense :). Let\u0027s keep it as-is, there\u0027s no need to make StaticSchema deliberately half-functional, IMHO.",
      "parentUuid": "9b3165e7_dd0cb535",
      "revId": "8aee3031939a76c88fb4005e67a9f779ba32f787",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    }
  ]
}