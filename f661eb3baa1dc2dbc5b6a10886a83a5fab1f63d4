{
  "comments": [
    {
      "key": {
        "uuid": "c1acb02f_4b3bf5fe",
        "filename": "src/leaf_data.hpp",
        "patchSetId": 22
      },
      "lineNbr": 149,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-04-02T21:46:15Z",
      "side": 1,
      "message": "nit: this can be simplified I think:\n\n if (type.m_allowedValues.count(boost::get\u003cenum_\u003e(attr) \u003e 0) {\n   return true;\n }\n\n first \u003d saveIter;\n parserContext.m_errorMsg \u003d ...;\n ...\n return false;\n\nbut feel free to leave it as-is.",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 149,
        "endChar": 27
      },
      "revId": "f661eb3baa1dc2dbc5b6a10886a83a5fab1f63d4",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2ac058e_acb17f30",
        "filename": "src/leaf_data.hpp",
        "patchSetId": 22
      },
      "lineNbr": 149,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2020-04-03T00:22:00Z",
      "side": 1,
      "message": "I tried this:\n\n if (type.m_allowedValues.count(boost::get\u003cenum_\u003e(attr)) !\u003d 0) {\n    return true;\n }\n first \u003d saveIter;\n parserContext.m_errorMsg \u003d \"leaf data type mismatch: Expected an enum here. Allowed values:\";\n\n for (const auto\u0026 it : type.m_allowedValues) {\n    parserContext.m_errorMsg +\u003d \" \" + it.m_value;\n }\n return false;\n\nBut I think I like the current version more. isValidEnum gives more info about what the code does (.count() !\u003d 0 isn\u0027t exactly best thing in C++, C++20 will have a .contains() method).\nAlso the current version is one line shorter ðŸ˜„",
      "parentUuid": "c1acb02f_4b3bf5fe",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 149,
        "endChar": 27
      },
      "revId": "f661eb3baa1dc2dbc5b6a10886a83a5fab1f63d4",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75f2558b_4ed9bae9",
        "filename": "src/leaf_data.hpp",
        "patchSetId": 22
      },
      "lineNbr": 149,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2020-04-03T10:57:38Z",
      "side": 1,
      "message": "I was mainly suggesting getting rid of that extra boolean flag variable, and then also to (in my opinion) simplify the flow by reversing the if condition. The success branch is shorter, it\u0027s just a return. But I do not have a strong preference, and besides, it makes sense to put all failures up front first. OK.",
      "parentUuid": "f2ac058e_acb17f30",
      "range": {
        "startLine": 141,
        "startChar": 0,
        "endLine": 149,
        "endChar": 27
      },
      "revId": "f661eb3baa1dc2dbc5b6a10886a83a5fab1f63d4",
      "serverId": "e32f8df8-3db0-4f76-a6c6-fe9d6e69dd68",
      "unresolved": false
    }
  ]
}